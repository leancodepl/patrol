name: test ios simulator

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  run_tests:
    name: Test on ${{ matrix.device }}, ${{ matrix.os }} ${{ matrix.os_version }}
    runs-on: macos-latest
    timeout-minutes: 60
    outputs:
      status: ${{ steps.set_status.outputs.status }}

    strategy:
      fail-fast: false
      matrix:
        flutter-channel: [stable]
        device: [iPhone 14, iPad (9th generation)]
        os: [iOS]
        os_version: ['16.2']

    defaults:
      run:
        working-directory: packages/patrol/example

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.flutter-channel }}

      - name: Preload Flutter artifacts
        run: flutter precache

      - name: Set up Patrol CLI
        run: dart pub global activate patrol_cli

      - name: Start iOS simulator
        uses: futureware-tech/simulator-action@v2
        with:
          model: ${{ matrix.device }}
          os: ${{ matrix.os }}
          os_version: ${{ matrix.os_version }}
          erase_before_boot: true
          shutdown_after_job: true

      - name: Set simulator location
        run: xcrun simctl location booted set 52.17469,21.03193

      - run: patrol test -t integration_test/example_test.dart
        if: success() || failure()

      - run: patrol test -t integration_test/notifications_test.dart
        if: success() || failure()

      - run: patrol test -t integration_test/open_app_test.dart
        if: success() || failure()

      - run: patrol test -t integration_test/open_quick_settings_test.dart
        if: success() || failure() # should work, but is empty on Simulator

      - run: patrol test -t integration_test/permissions_location_test.dart
        if: success() || failure()

      - run: patrol test -t integration_test/permissions_many_test.dart
        if: success() || failure()

      - run: patrol test -t integration_test/service_cellular_test.dart
        if: ${{ false }} # Not on Simulator

      - run: patrol test -t integration_test/service_dark_mode_test.dart
        if: success() || failure()

      - run: patrol test -t integration_test/service_wifi_test.dart
        if: ${{ false }} # Not on Simulator

      - run: patrol test -t webview_hackernews_test.dart
        if: ${{ false }} # https://github.com/leancodepl/patrol/issues/1139
      - run: patrol test -t webview_leancode_test.dart
        if: ${{ false }} # https://github.com/leancodepl/patrol/issues/1139
      - run: patrol test -t webview_login_test.dart
        if: ${{ false }} # https://github.com/leancodepl/patrol/issues/1139
      - run: patrol test -t webview_stackoverflow_test.dart
        if: ${{ false }} # https://github.com/leancodepl/patrol/issues/1139

      - name: Set job status
        id: set_status
        if: success() || failure()
        run: echo "status=${{ job.status }}" >> "$GITHUB_OUTPUT"

  slack_notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    needs: run_tests
    if: always()

    steps:
      - name: Set Slack message
        id: slack_message
        env:
          STATUS: ${{ needs.run_tests.outputs.status }}
        run: >
          status="${{ env.STATUS }}"
          url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}";
          message="";
          if [ "$STATUS" = "failure" ]; then
            message="There were failing tests 💥 ";
          elif [ "$STATUS" = "success" ]; then
            message="All tests have passed ✅ ";
          else
            message="Something went wrong ⚠️";
          fi;
          echo "message=$message" >> $GITHUB_OUTPUT;
          echo "url=$url" >> $GITHUB_OUTPUT;
          echo "status=$status" >> $GITHUB_OUTPUT;

      - name: Share test results on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ vars.SLACK_STATUS_CHANNEL }}
          SLACK_USERNAME: Patrol CI on GitHub Actions
          SLACK_COLOR: ${{ steps.slack_message.outputs.status }}
          SLACK_ICON: ${{ vars.SLACK_ICON }}
          SLACK_TITLE: Test status (iOS Simulator)
          SLACK_MESSAGE: |
            ${{ steps.slack_message.outputs.message }}

            See workflow run <${{ steps.slack_message.outputs.url }}|here>
