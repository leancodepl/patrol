name: run integration tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */4 * * *"

jobs:
  main:
    name: Run integration tests on Android api-${{ matrix.api-level }}-${{ matrix.target}}-${{matrix.arch}}
    runs-on: macos-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        flutter-channel: [stable]
        api-level: [28, 29, 30, 31, 33]
        target: [google_apis]
        arch: [x86_64]

    defaults:
      run:
        working-directory: packages/patrol/example

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          generate-job-summary: false

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          ram-size: 3072M
          heap-size: 2048M
          disk-size: 3072M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.flutter-channel }}

      - name: Preload Flutter artifacts
        run: flutter precache

      - name: Install Patrol
        run: dart pub global activate patrol_cli

      - name: Start emulator and run integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          working-directory: ${{ github.workspace }}/packages/patrol/example
          script: |
            adb logcat -c
            adb logcat > logcat.txt &
            patrol drive --target integration_test/example_test.dart
            patrol drive --target integration_test/features/get_native_widgets_test.dart
            patrol drive --target integration_test/features/open_app_test.dart
            patrol drive --target integration_test/features/quick_settings_test.dart
            # patrol drive --target integration_test/features/permissions/location_test.dart # flaky
            # patrol drive --target integration_test/features/permissions/permissions_test.dart # flaky
            patrol drive --target integration_test/features/services/dark_mode_test.dart
            patrol drive --target integration_test/features/services/wifi_test.dart

      - name: Upload logcat to artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ./logcat.txt
          path: ${{ github.workspace }}/packages/patrol/example
