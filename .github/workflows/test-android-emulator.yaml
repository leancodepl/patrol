name: test android emulator

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  run_tests:
    name: Flutter ${{ matrix.flutter_version }} on emulator.wtf
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      SLACK_MESSAGE_TITLE: Flutter ${{ matrix.flutter_version }} on emulator.wtf
      TESTS_EXIT_CODE: ${{ steps.tests_step.outputs.TESTS_EXIT_CODE }}
      EXCLUDED_TESTS: ${{ steps.set_excluded_tests.outputs.EXCLUDED_TESTS }}

    strategy:
      fail-fast: false
      matrix:
        flutter_version: ['3.10.x']
        device_model: [Pixel2, Pixel7]

    defaults:
      run:
        working-directory: packages/patrol/example

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          generate-job-summary: false

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter_version }}
          cache: true

      - name: Preload Flutter artifacts
        run: flutter precache

      - name: Set up Patrol CLI
        working-directory: packages/patrol_cli
        run: dart pub global activate --source path . && patrol

      - name: Generate Gradle wrapper
        run: flutter build apk --debug --flavor=does-not-exist || true

      - name: Install ew-cli
        run: |
          mkdir -p "$HOME/bin"
          curl "https://maven.emulator.wtf/releases/ew-cli" -o "$HOME/bin/ew-cli"
          chmod a+x "$HOME/bin/ew-cli"
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "EW_API_TOKEN=${{ secrets.EW_API_TOKEN }}" >> $GITHUB_ENV

      - name: Set tests to exclude
        id: set_excluded_tests
        run: |
          TESTS_TO_EXCLUDE="permissions_location_test,\
          notifications_test,\
          service_airplane_mode_test,\
          service_bluetooth_test"

          target_paths=""
          for target in $(echo $TESTS_TO_EXCLUDE | tr ',' '\n'); do
              target_paths+="integration_test/${target}.dart,"
          done

          echo "EXCLUDED_TESTS=$TESTS_TO_EXCLUDE" >> "$GITHUB_OUTPUT"
          echo "EXCLUDED_TESTS=$target_paths" >> "$GITHUB_ENV"

      - name: patrol build android
        run: patrol build android --exclude ${{ env.EXCLUDED_TESTS }} --verbose

      - name: Upload APKs to emulator.wtf and wait for tests to finish
        id: tests_step
        run: |
          TESTS_EXIT_CODE=0
          ew-cli \
            emulatorwtf.yaml:main \
            --display-name "Patrol example app (${GITHUB_SHA::7}) on ${{ matrix.device_model }} API ${{ matrix.os_version }}" || TESTS_EXIT_CODE=$?

          echo "TESTS_EXIT_CODE=$TESTS_EXIT_CODE" >> "$GITHUB_OUTPUT"
          exit $TESTS_EXIT_CODE

      - name: Publish test report to summary
        uses: mikepenz/action-junit-report@v3
        if: ${{ (failure() || success()) && contains(fromJson('["success", "failure"]'), steps.tests_step.conclusion) }}
        with:
          check_name: Patrol tests
          report_paths: ${{ github.workspace }}/packages/patrol/example/test_artifacts/results.xml
          detailed_summary: true
          include_passed: true

      - name: Generate test report as check run
        if: ${{ (failure() || success()) && contains(fromJson('["success", "failure"]'), steps.tests_step.conclusion) }}
        uses: dorny/test-reporter@v1
        with:
          name: Patrol Tests
          path: ${{ github.workspace }}/packages/patrol/example/test_artifacts/results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload XML test report to artifacts
        if: ${{ (failure() || success()) && contains(fromJson('["success", "failure"]'), steps.tests_step.conclusion) }}
        uses: actions/upload-artifact@v3
        with:
          name: XML test report
          path: ${{ github.workspace }}/packages/patrol/example/test_artifacts/results.xml

      - name: Upload test outputs to artifacts
        if: ${{ (failure() || success()) && contains(fromJson('["success", "failure"]'), steps.tests_step.conclusion) }}
        uses: actions/upload-artifact@v3
        with:
          name: Test report, logs and captured videos
          path: ${{ github.workspace }}/packages/patrol/example/test_artifacts

  call_send_slack_message:
    name: Notify on Slack
    uses: ./.github/workflows/send-slack-message.yaml
    needs: run_tests
    if: always()
    with:
      TESTS_EXIT_CODE: ${{ needs.run_tests.outputs.TESTS_EXIT_CODE }}
      SLACK_MESSAGE_TITLE: ${{ needs.run_tests.outputs.SLACK_MESSAGE_TITLE }}
      EXCLUDED_TESTS: ${{ needs.run_tests.outputs.EXCLUDED_TESTS }}
    secrets: inherit
