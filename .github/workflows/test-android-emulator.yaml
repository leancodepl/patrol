name: test android emulator

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  run_tests:
    name: Flutter ${{ matrix.flutter-version }} on emulator.wtf
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      status: ${{ steps.set_status.outputs.status }}

    strategy:
      fail-fast: false
      matrix:
        flutter-version: ['3.7.12']

    defaults:
      run:
        working-directory: packages/patrol/example

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
        with:
          generate-job-summary: false

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          cache: true

      - name: Preload Flutter artifacts
        run: flutter precache

      - name: Set up Patrol CLI
        working-directory: packages/patrol_cli
        run: dart pub global activate --source path . && patrol

      - name: Generate Gradle wrapper
        run: flutter build apk --debug --flavor=does-not-exist || true

      - name: Install ew-cli
        run: |
          mkdir -p "$HOME/bin"
          curl "https://maven.emulator.wtf/releases/ew-cli" -o "$HOME/bin/ew-cli"
          chmod a+x "$HOME/bin/ew-cli"
          echo "$HOME/bin" >> $GITHUB_PATH
          echo "EW_API_TOKEN=${{ secrets.EW_API_TOKEN }}" >> $GITHUB_ENV

      - name: patrol build android
        run: |
          patrol build android \
            --exclude integration_test/permissions_location_test.dart \
            --exclude integration_test/service_airplane_mode_test.dart \
            --exclude integration_test/service_bluetooth_test.dart \
            --exclude integration_test/webview_hackernews_test.dart \
            --exclude integration_test/webview_leancode_test.dart \
            --exclude integration_test/webview_login_test.dart \
            --exclude integration_test/webview_stackoverflow_test.dart

      - name: Upload APKs to emulator.wtf and wait for tests to finish
        run: >
          ew-cli
          --app build/app/outputs/apk/debug/app-debug.apk
          --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          --num-shards 10
          --use-orchestrator
          --clear-package-data
          --record-video
          --timeout 10m
          --environment-variables packageName="pl.leancode.patrol.example"
          --outputs-dir test_artifacts
          --outputs summary,merged_results_xml,coverage,pulled_dirs,results_xml,logcat,captured_video

      - name: Generate test report to job summary
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          check_name: Patrol tests
          report_paths: ${{ github.workspace }}/packages/patrol/example/test_artifacts/results.xml
          detailed_summary: true
          include_passed: true

      - name: Generate test report as check run
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: Patrol Tests
          path: ${{ github.workspace }}/packages/patrol/example/test_artifacts/results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload test outputs to artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: Test results, logs and captured video
          path: ${{ github.workspace }}/packages/patrol/example/test_artifacts

      - name: Set job status
        id: set_status
        if: success() || failure()
        run: echo "status=${{ job.status }}" >> "$GITHUB_OUTPUT"

  slack_notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    needs: run_tests
    if: ${{ false }}

    steps:
      - name: Set Slack message
        id: slack_message
        env:
          STATUS: ${{ needs.run_tests.outputs.status }}
        run: >
          status="${{ env.STATUS }}"
          url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}";
          message="";
          if [ "$STATUS" = "failure" ]; then
            message="There were failing tests 💥 ";
          elif [ "$STATUS" = "success" ]; then
            message="All tests have passed ✅ ";
          else
            message="Something went wrong ⚠️";
          fi;
          echo "message=$message" >> $GITHUB_OUTPUT;
          echo "url=$url" >> $GITHUB_OUTPUT;
          echo "status=$status" >> $GITHUB_OUTPUT;

      - name: Share test results on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ vars.SLACK_STATUS_CHANNEL }}
          SLACK_USERNAME: Patrol CI on GitHub Actions
          SLACK_COLOR: ${{ steps.slack_message.outputs.status }}
          SLACK_ICON: ${{ vars.SLACK_ICON }}
          SLACK_TITLE: Test status (Android emulator on emulator.wtf)
          SLACK_MESSAGE: |
            ${{ steps.slack_message.outputs.message }}

            See workflow run <${{ steps.slack_message.outputs.url }}|here>
