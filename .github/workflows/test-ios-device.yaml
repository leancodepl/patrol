name: test ios device

on:
  workflow_dispatch:
  schedule:
    - cron: '30 21 * * *'

jobs:
  main:
    name: Test on iOS device on Firebase Test Lab
    runs-on: macos-latest
    timeout-minutes: 60

    defaults:
      run:
        working-directory: packages/patrol/example

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Add current platform to Gemfile
        working-directory: packages/patrol/example/ios
        run: bundle lock --add-platform ruby
        
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true
          working-directory: packages/patrol/example/ios

      - name: Set up fastlane
        working-directory: packages/patrol/example/ios
        run: bundle install

      - name: Set GIT_AUTHORIZATION variable
        env:
          GIT_USERNAME: ${{ secrets.PATROL_FASTLANE_CERTS_REPO_TOKEN_USERNAME }}
          GIT_TOKEN: ${{ secrets.PATROL_FASTLANE_CERTS_REPO_TOKEN }}
        run: | 
          GIT_AUTHORIZATION="$(echo -n $GIT_USERNAME:$GIT_TOKEN | base64)"
          echo "GIT_AUTHORIZATION=$GIT_AUTHORIZATION" >> $GITHUB_ENV

      - name: Run fastlane match
        working-directory: packages/patrol/example/ios
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GIT_AUTHORIZATION: ${{ env.GIT_AUTHORIZATION }}
          APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
          APP_STORE_ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
          APP_STORE_KEY: ${{ secrets.APP_STORE_KEY }}
        run: bundle exec fastlane ios certificates

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_JSON }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.flutter-channel }}

      - name: Preload Flutter artifacts
        run: flutter precache

      - name: Set up Patrol CLI
        working-directory: packages/patrol_cli
        run: dart pub global activate --source path . && patrol

      - name: Set iphoneos target to 16.3
        run: |
          xcodebuild -showBuildSettings | grep IPHONEOS_DEPLOYMENT_TARGET
          echo "IPHONEOS_DEPLOYMENT_TARGET=16.3" >> "$GITHUB_ENV"

      - name: Build tests
        run: patrol build ios --release

      - name: Upload APKs to Firebase Test Lab and wait for tests to finish
        id: tests_step
        run: ./run_ios_testlab
