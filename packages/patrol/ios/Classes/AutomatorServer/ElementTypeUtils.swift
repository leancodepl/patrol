#if PATROL_ENABLED

  import Foundation
  import XCTest

  private let elementTypeNames = [
    XCUIElement.ElementType.any: "any",
    XCUIElement.ElementType.other: "other",
    XCUIElement.ElementType.application: "application",
    XCUIElement.ElementType.group: "group",
    XCUIElement.ElementType.window: "window",
    XCUIElement.ElementType.sheet: "sheet",
    XCUIElement.ElementType.drawer: "drawer",
    XCUIElement.ElementType.alert: "alert",
    XCUIElement.ElementType.dialog: "dialog",
    XCUIElement.ElementType.button: "button",
    XCUIElement.ElementType.radioButton: "radioButton",
    XCUIElement.ElementType.radioGroup: "radioGroup",
    XCUIElement.ElementType.checkBox: "checkBox",
    XCUIElement.ElementType.disclosureTriangle: "disclosureTriangle",
    XCUIElement.ElementType.popUpButton: "popUpButton",
    XCUIElement.ElementType.comboBox: "comboBox",
    XCUIElement.ElementType.menuButton: "menuButton",
    XCUIElement.ElementType.toolbarButton: "toolbarButton",
    XCUIElement.ElementType.popover: "popover",
    XCUIElement.ElementType.keyboard: "keyboard",
    XCUIElement.ElementType.key: "key",
    XCUIElement.ElementType.navigationBar: "navigationBar",
    XCUIElement.ElementType.tabBar: "tabBar",
    XCUIElement.ElementType.tabGroup: "tabGroup",
    XCUIElement.ElementType.toolbar: "toolbar",
    XCUIElement.ElementType.statusBar: "statusBar",
    XCUIElement.ElementType.table: "table",
    XCUIElement.ElementType.tableRow: "tableRow",
    XCUIElement.ElementType.tableColumn: "tableColumn",
    XCUIElement.ElementType.outline: "outline",
    XCUIElement.ElementType.outlineRow: "outlineRow",
    XCUIElement.ElementType.browser: "browser",
    XCUIElement.ElementType.collectionView: "collectionView",
    XCUIElement.ElementType.slider: "slider",
    XCUIElement.ElementType.pageIndicator: "pageIndicator",
    XCUIElement.ElementType.progressIndicator: "progressIndicator",
    XCUIElement.ElementType.activityIndicator: "activityIndicator",
    XCUIElement.ElementType.segmentedControl: "segmentedControl",
    XCUIElement.ElementType.picker: "picker",
    XCUIElement.ElementType.pickerWheel: "pickerWheel",
    XCUIElement.ElementType.switch: "switch",
    XCUIElement.ElementType.toggle: "toggle",
    XCUIElement.ElementType.link: "link",
    XCUIElement.ElementType.image: "image",
    XCUIElement.ElementType.icon: "icon",
    XCUIElement.ElementType.searchField: "searchField",
    XCUIElement.ElementType.scrollView: "scrollView",
    XCUIElement.ElementType.scrollBar: "scrollBar",
    XCUIElement.ElementType.staticText: "staticText",
    XCUIElement.ElementType.textField: "textField",
    XCUIElement.ElementType.secureTextField: "secureTextField",
    XCUIElement.ElementType.datePicker: "datePicker",
    XCUIElement.ElementType.textView: "textView",
    XCUIElement.ElementType.menu: "menu",
    XCUIElement.ElementType.menuItem: "menuItem",
    XCUIElement.ElementType.menuBar: "menuBar",
    XCUIElement.ElementType.menuBarItem: "menuBarItem",
    XCUIElement.ElementType.map: "map",
    XCUIElement.ElementType.webView: "webView",
    XCUIElement.ElementType.incrementArrow: "incrementArrow",
    XCUIElement.ElementType.decrementArrow: "decrementArrow",
    XCUIElement.ElementType.timeline: "timeline",
    XCUIElement.ElementType.ratingIndicator: "ratingIndicator",
    XCUIElement.ElementType.valueIndicator: "valueIndicator",
    XCUIElement.ElementType.splitGroup: "splitGroup",
    XCUIElement.ElementType.splitter: "splitter",
    XCUIElement.ElementType.relevanceIndicator: "relevanceIndicator",
    XCUIElement.ElementType.colorWell: "colorWell",
    XCUIElement.ElementType.helpTag: "helpTag",
    XCUIElement.ElementType.matte: "matte",
    XCUIElement.ElementType.dockItem: "dockItem",
    XCUIElement.ElementType.ruler: "ruler",
    XCUIElement.ElementType.rulerMarker: "rulerMarker",
    XCUIElement.ElementType.grid: "grid",
    XCUIElement.ElementType.levelIndicator: "levelIndicator",
    XCUIElement.ElementType.cell: "cell",
    XCUIElement.ElementType.layoutArea: "layoutArea",
    XCUIElement.ElementType.layoutItem: "layoutItem",
    XCUIElement.ElementType.handle: "handle",
    XCUIElement.ElementType.stepper: "stepper",
    XCUIElement.ElementType.tab: "tab",
    XCUIElement.ElementType.touchBar: "touchBar",
    XCUIElement.ElementType.statusItem: "statusItem",
  ]

  func getElementTypeName(elementType: XCUIElement.ElementType) -> String? {
    return elementTypeNames[elementType]
  }

#endif
