#!/usr/bin/env bash
set -euo pipefail

# bs_ios uploads app binaries for UI testing on BrowserStack.
#
# This version of the script works only with the V2 endpoint (XC Test Plans).
# This script assumes that Xcode Test Plan name is TestPlan
#
# It forwards all arguments to `patrol build ios`, so you can pass --target, --exclude etc.
#

xcode_test_plan_name="TestPlan"

# Capture all arguments because they'll be consumed by getopt
original_args=("$@")

if [ -z "${BROWSERSTACK_CREDS:-}" ]; then
  echo "Error: missing BROWSERSTACK_CREDS env var" >&2
  exit 1
fi

printf "\n"
patrol build ios --release --verbose "${original_args[@]}"

printf "\nZipping test files...\n"

cd build/ios_integ/Build/Products

rm -rf Payload && mkdir -p Payload
cp -r Release-iphoneos/Runner.app Payload
zip -r Runner.ipa Payload >/dev/null

cd - >/dev/null

cd build/ios_integ/Build/Products/Release-iphoneos
rm -rf ios_tests.zip

# BrowserStack fails if DiagnosticCollectionPolicy is present
plutil -remove 'TestConfigurations.TestTargets.DiagnosticCollectionPolicy' ../Runner_${xcode_test_plan_name}_iphoneos*.xctestrun

cp ../Runner_${xcode_test_plan_name}_iphoneos*.xctestrun .
zip -r ios_tests.zip Runner_${xcode_test_plan_name}_iphoneos*.xctestrun RunnerUITests-Runner.app >/dev/null
cd - >/dev/null
printf "Completed zipping\n"

printf "\nUploading app...\n"

# https://www.browserstack.com/docs/app-automate/api-reference/xcuitest/apps#upload-an-app
app_url="$(
  curl -u "$BROWSERSTACK_CREDS" \
    -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/app" \
    -F "file=@$PWD/build/ios_integ/Build/Products/Runner.ipa" |
    jq --raw-output .app_url
)"

echo "Uploaded app, url: $app_url"

printf "\nUploading test...\n"

# https://www.browserstack.com/docs/app-automate/api-reference/xcuitest/tests#upload-a-test-suite
test_url="$(
  curl -u "$BROWSERSTACK_CREDS" \
    -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/test-suite" \
    -F "file=@$PWD/build/ios_integ/Build/Products/Release-iphoneos/ios_tests.zip" |
    jq --raw-output .test_suite_url
)"

echo "Uploaded test, url: $test_url"

printf "\nScheduling test execution...\n"

# https://www.browserstack.com/docs/app-automate/api-reference/xcuitest/builds#execute-a-build
curl -u "$BROWSERSTACK_CREDS" \
  -X POST "https://api-cloud.browserstack.com/app-automate/xcuitest/v2/xctestrun-build" \
  -H "Content-Type: application/json" \
  --data-binary @- <<EOF
{
    "app": "$app_url",
    "testSuite": "$test_url",
    "project": "Patrol example app",
    "devices": ["iPhone 14-16"],
    "deviceLogs": true,
    "enableResultBundle": true,
    "idleTimeout": 60
}
EOF

printf "\nScheduled test execution"
