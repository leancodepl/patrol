# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Signs app on CI"
  lane :certificates do
    setup_ci if ENV['CI']

    app_store_connect_api_key(
      key_id: ENV["APP_STORE_KEY_ID"],
      issuer_id: ENV["APP_STORE_ISSUER_ID"],
      key_content: ENV["APP_STORE_KEY"],
      in_house: false,
    )

    match(
      type: "development",
      git_basic_authorization: ENV["GIT_AUTHORIZATION"],
      readonly: is_ci,
      app_identifier: ["pl.leancode.patrol.Example", "pl.leancode.patrol.Example.RunnerUITests"]
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      targets: ["Runner"],
      build_configurations: ["Release"],
      code_sign_identity: "iPhone Developer",
      profile_name: ENV["sigh_pl.leancode.patrol.Example_development_profile-path"],
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      targets: ["RunnerUITests"],
      build_configurations: ["Release"],
      code_sign_identity: "iPhone Developer",
      profile_name: ENV["sigh_pl.leancode.patrol.Example.RunnerUITests_development_profile-path"],
    )

    update_project_provisioning(
      profile: ENV["sigh_pl.leancode.patrol.Example_development_profile-path"],
      build_configuration: "Release",
      target_filter: "Example",
      code_signing_identity: "iPhone Developer",
    )

    update_project_provisioning(
      profile: ENV["sigh_pl.leancode.patrol.Example.RunnerUITests_development_profile-path"],
      build_configuration: "Release",
      target_filter: "RunnerUITests",
      code_signing_identity: "iPhone Developer",
    )
  end
end
