def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdk 33

    namespace "pl.leancode.patrol.example"

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }

    defaultConfig {
        applicationId "pl.leancode.patrol.example"
        minSdk 26
        targetSdk 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    testOptions {
        String targetPath = findProperty("target")
        if (targetPath == null) {
            return
        }

        // Flutter tool sets target as relative path, e.g "lib/main.dart"
        boolean relative = targetPath.startsWith("integration_test${File.separator}")
        // Other tools (e.g Patrol) set target as absolute path, e.g "/home/charlie/my_app/lib/main.dart"
        boolean absolute = targetPath.contains("${File.separator}integration_test${File.separator}")
        if (relative || absolute) {
            targetPath = targetPath.substring(0, targetPath.length() - 5) // remove ".dart" from the end
            String result = targetPath.split("integration_test", 2)[1]
            result = result.substring(1) // remove path separator from the beginning

            reportDir = rootDir.path + File.separator + "test-reports" + File.separator + result
            resultsDir = rootDir.path + File.separator + "test-results" + File.separator + result
        }
    }
}

flutter {
    source "../.."
}

dependencies {
    testImplementation "junit:junit:4.13.2"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
