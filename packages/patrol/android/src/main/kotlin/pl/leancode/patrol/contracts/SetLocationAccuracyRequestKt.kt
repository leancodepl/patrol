// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: contracts.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package pl.leancode.patrol.contracts;

@kotlin.jvm.JvmName("-initializesetLocationAccuracyRequest")
public inline fun setLocationAccuracyRequest(block: pl.leancode.patrol.contracts.SetLocationAccuracyRequestKt.Dsl.() -> kotlin.Unit): pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest =
  pl.leancode.patrol.contracts.SetLocationAccuracyRequestKt.Dsl._create(pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `patrol.SetLocationAccuracyRequest`
 */
public object SetLocationAccuracyRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest = _builder.build()

    /**
     * `.patrol.SetLocationAccuracyRequest.LocationAccuracy locationAccuracy = 1;`
     */
    public var locationAccuracy: pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest.LocationAccuracy
      @JvmName("getLocationAccuracy")
      get() = _builder.getLocationAccuracy()
      @JvmName("setLocationAccuracy")
      set(value) {
        _builder.setLocationAccuracy(value)
      }
    public var locationAccuracyValue: kotlin.Int
      @JvmName("getLocationAccuracyValue")
      get() = _builder.getLocationAccuracyValue()
      @JvmName("setLocationAccuracyValue")
      set(value) {
        _builder.setLocationAccuracyValue(value)
      }
    /**
     * `.patrol.SetLocationAccuracyRequest.LocationAccuracy locationAccuracy = 1;`
     */
    public fun clearLocationAccuracy() {
      _builder.clearLocationAccuracy()
    }
  }
}
public inline fun pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest.copy(block: pl.leancode.patrol.contracts.SetLocationAccuracyRequestKt.Dsl.() -> kotlin.Unit): pl.leancode.patrol.contracts.Contracts.SetLocationAccuracyRequest =
  pl.leancode.patrol.contracts.SetLocationAccuracyRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

