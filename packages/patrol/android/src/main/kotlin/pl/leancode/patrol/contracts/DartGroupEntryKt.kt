// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: contracts.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package pl.leancode.patrol.contracts;

@kotlin.jvm.JvmName("-initializedartGroupEntry")
public inline fun dartGroupEntry(block: pl.leancode.patrol.contracts.DartGroupEntryKt.Dsl.() -> kotlin.Unit): pl.leancode.patrol.contracts.Contracts.DartGroupEntry =
  pl.leancode.patrol.contracts.DartGroupEntryKt.Dsl._create(pl.leancode.patrol.contracts.Contracts.DartGroupEntry.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `patrol.DartGroupEntry`
 */
public object DartGroupEntryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: pl.leancode.patrol.contracts.Contracts.DartGroupEntry.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: pl.leancode.patrol.contracts.Contracts.DartGroupEntry.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): pl.leancode.patrol.contracts.Contracts.DartGroupEntry = _builder.build()

    /**
     * `string name = 1;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * `.patrol.DartGroupEntry.GroupEntryType type = 3;`
     */
    public var type: pl.leancode.patrol.contracts.Contracts.DartGroupEntry.GroupEntryType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    public var typeValue: kotlin.Int
      @JvmName("getTypeValue")
      get() = _builder.getTypeValue()
      @JvmName("setTypeValue")
      set(value) {
        _builder.setTypeValue(value)
      }
    /**
     * `.patrol.DartGroupEntry.GroupEntryType type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EntriesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     */
     public val entries: com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEntriesList()
      )
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     * @param value The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEntries")
    public fun com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>.add(value: pl.leancode.patrol.contracts.Contracts.DartGroupEntry) {
      _builder.addEntries(value)
    }
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     * @param value The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEntries")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>.plusAssign(value: pl.leancode.patrol.contracts.Contracts.DartGroupEntry) {
      add(value)
    }
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     * @param values The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEntries")
    public fun com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>.addAll(values: kotlin.collections.Iterable<pl.leancode.patrol.contracts.Contracts.DartGroupEntry>) {
      _builder.addAllEntries(values)
    }
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     * @param values The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEntries")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>.plusAssign(values: kotlin.collections.Iterable<pl.leancode.patrol.contracts.Contracts.DartGroupEntry>) {
      addAll(values)
    }
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     * @param index The index to set the value at.
     * @param value The entries to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEntries")
    public operator fun com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>.set(index: kotlin.Int, value: pl.leancode.patrol.contracts.Contracts.DartGroupEntry) {
      _builder.setEntries(index, value)
    }
    /**
     * `repeated .patrol.DartGroupEntry entries = 4;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEntries")
    public fun com.google.protobuf.kotlin.DslList<pl.leancode.patrol.contracts.Contracts.DartGroupEntry, EntriesProxy>.clear() {
      _builder.clearEntries()
    }
  }
}
public inline fun pl.leancode.patrol.contracts.Contracts.DartGroupEntry.copy(block: pl.leancode.patrol.contracts.DartGroupEntryKt.Dsl.() -> kotlin.Unit): pl.leancode.patrol.contracts.Contracts.DartGroupEntry =
  pl.leancode.patrol.contracts.DartGroupEntryKt.Dsl._create(this.toBuilder()).apply { block() }._build()

