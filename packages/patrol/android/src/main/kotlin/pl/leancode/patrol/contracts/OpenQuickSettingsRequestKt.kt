// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: contracts.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package pl.leancode.patrol.contracts;

@kotlin.jvm.JvmName("-initializeopenQuickSettingsRequest")
public inline fun openQuickSettingsRequest(block: pl.leancode.patrol.contracts.OpenQuickSettingsRequestKt.Dsl.() -> kotlin.Unit): pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest =
  pl.leancode.patrol.contracts.OpenQuickSettingsRequestKt.Dsl._create(pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `patrol.OpenQuickSettingsRequest`
 */
public object OpenQuickSettingsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest = _builder.build()
  }
}
public inline fun pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest.copy(block: pl.leancode.patrol.contracts.OpenQuickSettingsRequestKt.Dsl.() -> kotlin.Unit): pl.leancode.patrol.contracts.Contracts.OpenQuickSettingsRequest =
  pl.leancode.patrol.contracts.OpenQuickSettingsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

